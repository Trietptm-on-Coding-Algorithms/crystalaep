#include <idc.idc>

// finds and prints all functions and their last N instructions

static main() {
	auto addr, end, name, inst, num, i, prev, disasm, count;
	
	addr = 0;
	num = 5;
	count = 1;
	
	for(addr = NextFunction(addr); addr != BADADDR; addr = NextFunction(addr))
	{
		//addr = GetFunctionAttr(ScreenEA(), FUNCATTR_START);
		
		name = Name(addr);
		end = GetFunctionAttr(addr, FUNCATTR_END);
		inst = addr;
		
		Message("[%d] Function %s at 0x%x (to 0x%x)\n", count, name, addr, end);
		
		while (inst < end) {
			inst = FindCode(inst, SEARCH_DOWN | SEARCH_NEXT);
			if(inst == BADADDR)
				break;
			
			if(GetMnem(inst) == "retn")
			{
				// we need to disasm backwards for N instructions
				prev = inst;
				
				for(i = 0; i < num; i++)
				{
					prev = FindCode(prev, SEARCH_UP | SEARCH_NEXT);
					
					if(prev <= addr)
					{
						// there were less than N instructions in the function (thus far)
						break;
					}
				}
				
				Message("--CODE START--\n");
				
				while(prev <= inst)
				{
					disasm = GetDisasm(prev);
					
					prev = FindCode(prev, SEARCH_DOWN | SEARCH_NEXT);
					if(prev == BADADDR)
						break;
					
					Message("\t%s\n", disasm);
				}
				
				Message("--CODE END--\n");
			}
		}
		
		count++;
	}
}
